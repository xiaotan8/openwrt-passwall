name: OpenWrt SNAPSHOT APK Build

on:
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            target: x86-64
          - arch: aarch64
            target: aarch64

    steps:
      # 拉取仓库
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 安装必要依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git curl wget python3 python3-pip unzip
          python3 -m pip install --upgrade setuptools wheel

      # 下载 apk-tools 静态二进制
      - name: Install apk-tools static
        run: |
          APK_VER="2.14.3-r0"
          curl -sSL "https://dl-cdn.alpinelinux.org/alpine/latest-stable/main/x86_64/apk-tools-static-$APK_VER.apk" -o apk-tools
          chmod +x apk-tools
          sudo mv apk-tools /usr/local/bin/apk
          apk --version

      # 获取当前分支
      - name: Determine branch
        run: |
          BRANCH="${GITHUB_BASE_REF#refs/heads/}"
          echo "Branch: $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      # 检测改动的 package
      - name: Determine changed packages
        run: |
          PKG_ROOTS=$(find . -name Makefile | grep -v ".*/src/Makefile" | sed -e 's@./\(.*\)/Makefile@\1/@')
          CHANGES=$(git diff --diff-filter=d --name-only origin/$BRANCH)
          PACKAGES=""
          for ROOT in $PKG_ROOTS; do
            for CHANGE in $CHANGES; do
              if [[ "$CHANGE" == "$ROOT"* ]]; then
                PACKAGES+=$(echo "$ROOT" | sed -e 's@.*/\(.*\)/@\1 @')
                break
              fi
            done
          done
          PACKAGES="${PACKAGES:-luci-app-attendedsysupgrade}"
          echo "Packages to build: $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

      # 构建 OpenWrt SDK
      - name: Build packages
        uses: openwrt/gh-action-sdk@v7
        env:
          ARCH: ${{ matrix.arch }}
          FEEDNAME: packages_ci
          V: s

      # 移动生成的 APK 文件到项目目录
      - name: Collect built packages
        run: |
          mkdir -p artifacts
          cp bin/packages/${{ matrix.arch }}/packages_ci/*.apk artifacts/ || true
          cp bin/packages/${{ matrix.arch }}/packages_ci/*.ipk artifacts/ || true

      # 上传构建产物
      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-packages
          path: artifacts/*

      # 上传日志
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-logs
          path: logs/
