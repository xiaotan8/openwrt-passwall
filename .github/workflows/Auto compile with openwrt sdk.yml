name: OpenWrt SNAPSHOT Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            target: x86-64
          - arch: arm64
            target: aarch64

    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Determine branch
      - name: Set branch name
        run: |
          BRANCH="${GITHUB_BASE_REF#refs/heads/}"
          echo "BRANCH=${BRANCH:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV
          echo "Building for branch $BRANCH"

      # 3. Install dependencies for building OpenWrt + APK tools
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git ccache libncurses5-dev zlib1g-dev flex bison gettext curl wget xz-utils unzip python3 python3-distutils

      # 4. Install apk-tools-static
      - name: Install apk-tools-static
        run: |
          APK_VER="2.14.3-r0"
          APK_URL="https://dl-cdn.alpinelinux.org/alpine/latest-stable/main/x86_64/apk-tools-static-$APK_VER.apk"
          curl -sSL $APK_URL -o apk-tools-static.apk
          mkdir -p apk-tools-static
          tar -xjf apk-tools-static.apk -C apk-tools-static
          sudo cp apk-tools-static/sbin/apk.static /usr/local/bin/apk
          chmod +x /usr/local/bin/apk
          apk --version

      # 5. Setup feeds
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 6. Build OpenWrt
      - name: Build OpenWrt
        run: |
          make defconfig
          make -j$(nproc) V=s

      # 7. Collect generated APK packages
      - name: Move APK packages to project root
        run: |
          mkdir -p output/packages
          cp bin/packages/${{ matrix.arch }}/*/*.apk output/packages/ || true

      # 8. Upload APK packages as artifacts
      - name: Upload APK packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-apk-packages
          path: output/packages/

      # 9. Upload build logs
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.arch }}-logs
          path: logs/
